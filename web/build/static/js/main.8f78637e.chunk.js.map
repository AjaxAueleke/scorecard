{"version":3,"sources":["component/Card.module.css","component/Navbar.module.css","component/CardInput.module.css","component/Card.jsx","component/CardInput.jsx","component/Navbar.jsx","App.jsx","index.js"],"names":["module","exports","Card","props","useEffect","io","on","msg","console","log","setIsChanged","prevState","useState","isChanged","side1","name","batting","side2","wickets","runs","bat1","score","bat2","onStrike","overs","bowling","currBowler","oversBowled","wicketsTaken","stats","setStats","axios","get","then","res","data","catch","err","error","message","className","styles","container","batters","CardInput","isLoading","setIsLoading","card","onSubmit","e","preventDefault","post","htmlFor","id","type","value","onChange","target","min","max","step","disabled","NavBar","history","useHistory","navbar","heading","navigation","onClick","push","App","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f78637e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Card_container__1NSt9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__2Vf6h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"CardInput_card__3_sba\"};","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport styles from \"./Card.module.css\";\r\nimport { io } from \"socket.io-client\";\r\n\r\nconst Card = (props) => {\r\n  useEffect(() => {\r\n   const socket = io() \r\n   socket.on(\"chat_message\", (msg) => {\r\n     console.log(msg);\r\n     setIsChanged(prevState =>!prevState);\r\n   });\r\n  },[]);\r\n\r\n  const [isChanged, setIsChanged] = useState();\r\n  const [stats, setStats] = useState({\r\n    side1: {\r\n      name: \"Australia\",\r\n      batting: true,\r\n    },\r\n    side2: { name: \"Pakistan\", batting: false },\r\n    wickets: 5,\r\n    runs: 110,\r\n    batting: {\r\n      bat1: { name: \"Babar Azam\", score: 56 },\r\n      bat2: { name: \"Muhammad Rizwan\", score: 95 },\r\n      onStrike: 1,\r\n    },\r\n    overs: 50,\r\n    bowling: {\r\n      currBowler: \"Imran Tahir\",\r\n      oversBowled: 10,\r\n      wicketsTaken: 5,\r\n    },\r\n  });\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/score\")\r\n      .then((res) => {\r\n        console.log(res);\r\n        setStats(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err.message);\r\n      });\r\n  }, [isChanged]);\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <h1>\r\n        {stats.side1.name}({stats.side1.batting ? \"Bat\" : \"Bowl\"}) vs{\" \"}\r\n        {stats.side2.name}({stats.side2.batting ? \"Bat\" : \"Bowl\"})\r\n      </h1>\r\n      <div className={styles.batting}>\r\n        <h2>Batting Side</h2>\r\n        <p>\r\n          SCORE : {stats.runs}/{stats.wickets}\r\n        </p>\r\n        <p>OVERS : {stats.overs}</p>\r\n        <div className={styles.batters}>\r\n          <p>{stats.batting.bat1.name}</p>\r\n          <span>RUNS :{stats.batting.bat1.score}</span>\r\n\r\n          <p>{stats.batting.bat2.name}</p>\r\n          <span>RUNS : {stats.batting.bat2.score}</span>\r\n        </div>\r\n      </div>\r\n      <div className={styles.bowling}>\r\n        <h2>Bowling Side</h2>\r\n        <p>BOWLING : {stats.bowling.currBowler}</p>\r\n        <span> Overs : {stats.bowling.oversBowled}/ Wickets : {stats.bowling.wicketsTaken}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Card;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport styles from \"./CardInput.module.css\";\r\nconst CardInput = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [stats, setStats] = useState({\r\n    side1: {\r\n      name: \"Australia\",\r\n      batting: true,\r\n    },\r\n    side2: { name: \"Pakistan\", batting: false },\r\n    wickets: 5,\r\n    runs: 110,\r\n    batting: {\r\n      bat1: { name: \"Babar Azam\", score: 56 },\r\n      bat2: { name: \"Muhammad Rizwan\", score: 95 },\r\n      onStrike: 1,\r\n    },\r\n    overs: 50,\r\n    bowling: {\r\n      currBowler: \"Imran Tahir\",\r\n      oversBowled: 10,\r\n      wicketsTaken: 5,\r\n    },\r\n  });\r\n  const onSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    console.log(e);\r\n    axios.post(`/score`, stats);\r\n  };\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    axios\r\n      .get(\"/score\")\r\n      .then((res) => {\r\n        console.log(res);\r\n        setIsLoading(false);\r\n        setStats(res.data);\r\n      })\r\n      .catch((err) => {\r\n        setIsLoading(false);\r\n        console.error(err.message);\r\n      });\r\n  }, []);\r\n  return (\r\n    <div className={styles.card}>\r\n      <h1>Match Input</h1>\r\n      <form onSubmit={onSubmitHandler}>\r\n        <label htmlFor=\"Team1\">\r\n          Team 1 :\r\n          <input\r\n            name=\"Team1\"\r\n            id=\"Team1\"\r\n            type=\"text\"\r\n            value={stats.side1.name}\r\n            onChange={(e) => {\r\n              setStats((prevState) => {\r\n                return {\r\n                  ...prevState,\r\n                  side1: {\r\n                    name: e.target.value,\r\n                    batting: prevState.side1.batting,\r\n                  },\r\n                };\r\n              });\r\n            }}\r\n          />\r\n        </label>\r\n        <label htmlFor=\"Team2\">\r\n          Team 2 :\r\n          <input\r\n            name=\"Team2\"\r\n            id=\"Team2\"\r\n            type=\"text\"\r\n            value={stats.side2.name}\r\n            onChange={(e) => {\r\n              setStats((prevState) => {\r\n                return {\r\n                  ...prevState,\r\n                  side2: {\r\n                    name: e.target.value,\r\n                    batting: prevState.side2.batting,\r\n                  },\r\n                };\r\n              });\r\n            }}\r\n          />\r\n        </label>\r\n        <label htmlFor=\"wickets\">\r\n          Wickets :\r\n          <input\r\n            name=\"wickets\"\r\n            id=\"wickets\"\r\n            type=\"number\"\r\n            min=\"0\"\r\n            max=\"9\"\r\n            step=\"1\"\r\n            value={stats.wickets}\r\n            onChange={(e) => {\r\n              setStats((prevState) => {\r\n                return {\r\n                  ...prevState,\r\n                  wickets: e.target.value,\r\n                };\r\n              });\r\n            }}\r\n          />\r\n        </label>\r\n        <label htmlFor=\"runs\">\r\n          Runs:\r\n          <input\r\n            name=\"runs\"\r\n            id=\"runs\"\r\n            type=\"number\"\r\n            min=\"0\"\r\n            max=\"500\"\r\n            step=\"1\"\r\n            value={stats.runs}\r\n            onChange={(e) => {\r\n              setStats((prevState) => {\r\n                return {\r\n                  ...prevState,\r\n                  runs: e.target.value,\r\n                };\r\n              });\r\n            }}\r\n          />\r\n        </label>\r\n        <label htmlFor=\"overs\">\r\n          Overs :\r\n          <input\r\n            name=\"overs\"\r\n            id=\"overs\"\r\n            type=\"number\"\r\n            min=\"0\"\r\n            max=\"100\"\r\n            step=\"0.1\"\r\n            value={stats.overs}\r\n            onChange={(e) => {\r\n              setStats((prevState) => {\r\n                return {\r\n                  ...prevState,\r\n                  overs: e.target.value,\r\n                };\r\n              });\r\n            }}\r\n          />\r\n        </label>\r\n        <label htmlFor=\"batting1\">\r\n          Batsman(1) :\r\n          <input\r\n            name=\"batting1\"\r\n            id=\"batting1\"\r\n            type=\"text\"\r\n            value={stats.batting.bat1.name}\r\n            onChange={(e) => {\r\n              setStats((prevState) => {\r\n                return {\r\n                  ...prevState,\r\n                  batting: {\r\n                    bat1: {\r\n                      name: e.target.value,\r\n                      score: prevState.batting.bat1.score,\r\n                    },\r\n                    bat2: prevState.batting.bat2,\r\n                  },\r\n                };\r\n              });\r\n            }}\r\n          />\r\n        </label>\r\n        <label htmlFor=\"batting1score\">\r\n          Batsman(1) runs:\r\n          <input\r\n            name=\"batting1score\"\r\n            id=\"batting1score\"\r\n            type=\"number\"\r\n            value={stats.batting.bat1.score}\r\n            min=\"0\"\r\n            max=\"500\"\r\n            step=\"1\"\r\n            onChange={(e) => {\r\n              setStats((prevState) => {\r\n                return {\r\n                  ...prevState,\r\n                  batting: {\r\n                    bat1: {\r\n                      name: prevState.batting.bat1.name,\r\n                      score: e.target.value,\r\n                    },\r\n                    bat2: prevState.batting.bat2,\r\n                  },\r\n                };\r\n              });\r\n            }}\r\n          />\r\n        </label>\r\n        <label htmlFor=\"batting2\">\r\n          Batsman(2) :\r\n          <input\r\n            name=\"batting2\"\r\n            id=\"batting2\"\r\n            type=\"text\"\r\n            value={stats.batting.bat2.name}\r\n            onChange={(e) => {\r\n              setStats((prevState) => {\r\n                return {\r\n                  ...prevState,\r\n                  batting: {\r\n                    bat2: {\r\n                      name: e.target.value,\r\n                      score: prevState.batting.bat2.score,\r\n                    },\r\n                    bat1: prevState.batting.bat1,\r\n                  },\r\n                };\r\n              });\r\n            }}\r\n          />\r\n        </label>\r\n\r\n        <label htmlFor=\"batting2score\">\r\n          Batsman(2) runs :\r\n          <input\r\n            name=\"batting2score\"\r\n            id=\"batting2score\"\r\n            type=\"number\"\r\n            value={stats.batting.bat2.score}\r\n            min=\"0\"\r\n            max=\"500\"\r\n            step=\"1\"\r\n            onChange={(e) => {\r\n              setStats((prevState) => {\r\n                return {\r\n                  ...prevState,\r\n                  batting: {\r\n                    bat2: {\r\n                      name: prevState.batting.bat2.name,\r\n                      score: e.target.value,\r\n                    },\r\n                    bat1: prevState.batting.bat1,\r\n                  },\r\n                };\r\n              });\r\n            }}\r\n          />\r\n        </label>\r\n        <label htmlFor=\"bowling\">\r\n          Bowling:\r\n          <input\r\n            name=\"bowling\"\r\n            id=\"bowling\"\r\n            type=\"text\"\r\n            value={stats.bowling.currBowler}\r\n            onChange={(e) => {\r\n              setStats((prevState) => {\r\n                return {\r\n                  ...prevState,\r\n                  bowling: {\r\n                    currBowler: e.target.value,\r\n                    oversBowled: prevState.bowling.oversBowled,\r\n                    wicketsTaken: prevState.bowling.wicketsTaken,\r\n                  },\r\n                };\r\n              });\r\n            }}\r\n          />\r\n        </label>\r\n\r\n        <label htmlFor=\"bowlingovers\">\r\n          OversBowled:\r\n          <input\r\n            name=\"bowlingovers\"\r\n            id=\"bowlingovers\"\r\n            type=\"number\"\r\n            value={stats.bowling.oversBowled}\r\n            min=\"0\"\r\n            step=\"0.1\"\r\n            onChange={(e) => {\r\n              setStats((prevState) => {\r\n                return {\r\n                  ...prevState,\r\n                  bowling: {\r\n                    currBowler: prevState.bowling.currBowler,\r\n                    oversBowled: e.target.value,\r\n                    wicketsTaken: prevState.bowling.wicketsTaken,\r\n                  },\r\n                };\r\n              });\r\n            }}\r\n          />\r\n        </label>\r\n        <label htmlFor=\"bowlingwickets\">\r\n          Wickets Taken:\r\n          <input\r\n            name=\"bowlingwickets\"\r\n            id=\"bowlingewickets\"\r\n            type=\"number\"\r\n            value={stats.bowling.wicketsTaken}\r\n            min=\"0\"\r\n            step=\"1\"\r\n            onChange={(e) => {\r\n              setStats((prevState) => {\r\n                return {\r\n                  ...prevState,\r\n                  bowling: {\r\n                    currBowler: prevState.bowling.currBowler,\r\n                    oversBowled: prevState.bowling.oversBowled,\r\n                    wicketsTaken: e.target.value,\r\n                  },\r\n                };\r\n              });\r\n            }}\r\n          />\r\n        </label>\r\n\r\n        <br />\r\n        <button type=\"submit\" disabled={isLoading}>\r\n          Publish\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardInput;\r\n","import React from \"react\";\r\nimport styles from \"./Navbar.module.css\";\r\nimport {useHistory} from 'react-router-dom';\r\nconst NavBar = (props) => {\r\n  const history = useHistory();\r\n  return (\r\n    <nav className={styles.navbar}>\r\n      <h1>{props.heading}</h1>\r\n      <div className={styles.navigation}>\r\n        <p onClick ={() => {\r\n          history.push(\"/input\")\r\n        }}>Controller</p>\r\n        <p onClick = {() => {\r\n          history.push(\"/\");\r\n        }}>ScoreBoard</p>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import \"./App.css\";\nimport Card from \"./component/Card\";\nimport CardInput from \"./component/CardInput\";\nimport NavBar from \"./component/Navbar\";\nimport { BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\nfunction App() {\n  return (\n    <>\n      <Router>\n        <NavBar heading=\"Live Score!\" />\n        <Switch>\n          <Route path=\"/input\">\n            <CardInput />\n          </Route>\n          <Route exact path=\"/\">\n            <Card />\n          </Route>\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}